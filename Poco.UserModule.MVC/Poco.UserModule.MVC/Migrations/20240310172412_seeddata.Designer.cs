// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Poco.UserModule.MVC.Contexts;

#nullable disable

namespace Poco.UserModule.MVC.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240310172412_seeddata")]
    partial class seeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.AdminUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Gender")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("adminUsers");

                    b.HasData(
                        new
                        {
                            Id = "7c5db4c0-a5bc-44b1-833b-6dd03d86865c",
                            Address = "Burma",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6236),
                            Email = "hello@gmail.com",
                            Gender = true,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hello",
                            Password = "12345",
                            Phone = "123456789",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6236),
                            UserName = "KZH"
                        });
                });

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.Features", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("features");

                    b.HasData(
                        new
                        {
                            Id = "81eba542-e560-4cb4-98c3-daded77676c4",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5871),
                            IsDeleted = false,
                            Name = "Create",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5872)
                        },
                        new
                        {
                            Id = "e27ce0ba-bdca-450c-81ba-489f05866dd2",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5878),
                            IsDeleted = false,
                            Name = "View",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5879)
                        },
                        new
                        {
                            Id = "6dab512b-8734-4fdd-8c01-9ebf7a6fed87",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5884),
                            IsDeleted = false,
                            Name = "Update",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5885)
                        },
                        new
                        {
                            Id = "fbcb82c7-48ee-4847-a337-c48aca9e66fb",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5890),
                            IsDeleted = false,
                            Name = "Delete",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5891)
                        });
                });

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.Permissions", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FeaturesId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FeaturesId");

                    b.ToTable("permissions");

                    b.HasData(
                        new
                        {
                            Id = "98c40655-e7f1-4fe5-ac53-92b687e670a8",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5968),
                            FeaturesId = "81eba542-e560-4cb4-98c3-daded77676c4",
                            IsDeleted = false,
                            Name = "User",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5968)
                        },
                        new
                        {
                            Id = "d8190480-ce9b-4570-80a9-2cbb6b1b178f",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5976),
                            FeaturesId = "e27ce0ba-bdca-450c-81ba-489f05866dd2",
                            IsDeleted = false,
                            Name = "User",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5976)
                        },
                        new
                        {
                            Id = "2635b3c0-1696-4bdf-b872-0fcf16dae2dd",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5982),
                            FeaturesId = "6dab512b-8734-4fdd-8c01-9ebf7a6fed87",
                            IsDeleted = false,
                            Name = "User",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5982)
                        },
                        new
                        {
                            Id = "57be7bb2-2e54-4e4b-9354-2d54f3608424",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5988),
                            FeaturesId = "fbcb82c7-48ee-4847-a337-c48aca9e66fb",
                            IsDeleted = false,
                            Name = "User",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5988)
                        },
                        new
                        {
                            Id = "b0cd1b74-c49e-49a1-af99-7b18a9cec4fb",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5993),
                            FeaturesId = "81eba542-e560-4cb4-98c3-daded77676c4",
                            IsDeleted = false,
                            Name = "Role",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5994)
                        },
                        new
                        {
                            Id = "c73afeb4-0dcd-4dea-a9d8-48b7aa75ca78",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5999),
                            FeaturesId = "e27ce0ba-bdca-450c-81ba-489f05866dd2",
                            IsDeleted = false,
                            Name = "Role",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6000)
                        },
                        new
                        {
                            Id = "4d37e9f9-aab2-41a3-a048-b37cd0ad4193",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6005),
                            FeaturesId = "6dab512b-8734-4fdd-8c01-9ebf7a6fed87",
                            IsDeleted = false,
                            Name = "Role",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6005)
                        },
                        new
                        {
                            Id = "8f676308-196e-46ea-a81d-3b7810a08b9e",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6011),
                            FeaturesId = "fbcb82c7-48ee-4847-a337-c48aca9e66fb",
                            IsDeleted = false,
                            Name = "Role",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6011)
                        });
                });

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.RolePermissions", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PermissionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("rolePermissions");

                    b.HasData(
                        new
                        {
                            Id = "e980d1f1-433d-46d2-9034-93aefba5713b",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6081),
                            IsDeleted = false,
                            Name = "User",
                            PermissionId = "98c40655-e7f1-4fe5-ac53-92b687e670a8",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6082)
                        },
                        new
                        {
                            Id = "35d7b210-f407-4e03-b704-fb44636a104c",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6091),
                            IsDeleted = false,
                            Name = "User",
                            PermissionId = "d8190480-ce9b-4570-80a9-2cbb6b1b178f",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6091)
                        },
                        new
                        {
                            Id = "4768ebc6-9df9-4183-bc10-a402ff886dfa",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6097),
                            IsDeleted = false,
                            Name = "User",
                            PermissionId = "2635b3c0-1696-4bdf-b872-0fcf16dae2dd",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6097)
                        },
                        new
                        {
                            Id = "49dc0e47-bb12-4747-903e-f6c8fd52a09d",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6103),
                            IsDeleted = false,
                            Name = "User",
                            PermissionId = "57be7bb2-2e54-4e4b-9354-2d54f3608424",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6103)
                        },
                        new
                        {
                            Id = "c5452c78-be76-4cd2-80af-5a568e90e63b",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6109),
                            IsDeleted = false,
                            Name = "Role",
                            PermissionId = "b0cd1b74-c49e-49a1-af99-7b18a9cec4fb",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6109)
                        },
                        new
                        {
                            Id = "706969bb-bac5-430a-9789-25bdcd02e6da",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6114),
                            IsDeleted = false,
                            Name = "Role",
                            PermissionId = "c73afeb4-0dcd-4dea-a9d8-48b7aa75ca78",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6115)
                        },
                        new
                        {
                            Id = "0bd26cec-ab53-4569-8d69-07a23189eb71",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6120),
                            IsDeleted = false,
                            Name = "Role",
                            PermissionId = "4d37e9f9-aab2-41a3-a048-b37cd0ad4193",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6120)
                        },
                        new
                        {
                            Id = "61148db0-0a1c-41c9-882b-858bdb322d8b",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6126),
                            IsDeleted = false,
                            Name = "Role",
                            PermissionId = "8f676308-196e-46ea-a81d-3b7810a08b9e",
                            RoleId = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(6126)
                        });
                });

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = "2ab8d293-0e06-44a9-be5f-6d050e77f9be",
                            CreatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5721),
                            IsDeleted = false,
                            Name = "Admin",
                            UpdatedAt = new DateTime(2024, 3, 10, 17, 24, 12, 347, DateTimeKind.Utc).AddTicks(5722)
                        });
                });

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.AdminUser", b =>
                {
                    b.HasOne("Poco.UserModule.MVC.Entities.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.Permissions", b =>
                {
                    b.HasOne("Poco.UserModule.MVC.Entities.Features", "Features")
                        .WithMany()
                        .HasForeignKey("FeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Features");
                });

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.RolePermissions", b =>
                {
                    b.HasOne("Poco.UserModule.MVC.Entities.Permissions", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poco.UserModule.MVC.Entities.Roles", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Poco.UserModule.MVC.Entities.Roles", b =>
                {
                    b.Navigation("RolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
